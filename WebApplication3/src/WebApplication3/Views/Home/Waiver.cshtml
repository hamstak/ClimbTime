
@{
    ViewData["Title"] = "Home Page";
}
@model IEnumerable<User>

<!DOCTYPE HTML>
<!-- saved from url=(0038)http://szimek.github.io/signature_pad/ -->
<head>

</head>

<script type="text/javascript">
    var canvas, ctx, flag = false,
        prevX = 0,
        currX = 0,
        prevY = 0,
        currY = 0,
        dot_flag = false;

    var x = "black",
        y = 2;

    function init() {
        canvas = document.getElementById('canvas');
        ctx = canvas.getContext("2d");
        w = canvas.width;
        h = canvas.height;

        canvas.addEventListener("mousemove", function (e) {
            findxy('move', e)
        }, false);
        canvas.addEventListener("mousedown", function (e) {
            findxy('down', e)
        }, false);
        canvas.addEventListener("mouseup", function (e) {
            findxy('up', e)
        }, false);
        canvas.addEventListener("mouseout", function (e) {
            findxy('out', e)
        }, false);
    }

    function color(obj) {
        switch (obj.id) {
            case "green":
                x = "green";
                break;
            case "blue":
                x = "blue";
                break;
            case "red":
                x = "red";
                break;
            case "yellow":
                x = "yellow";
                break;
            case "orange":
                x = "orange";
                break;
            case "black":
                x = "black";
                break;
            case "white":
                x = "white";
                break;
        }
        if (x == "white") y = 14;
        else y = 2;

    }

    function draw() {
        ctx.beginPath();
        ctx.moveTo(prevX, prevY);
        ctx.lineTo(currX, currY);
        ctx.strokeStyle = x;
        ctx.lineWidth = y;
        ctx.stroke();
        ctx.closePath();
    }

    function erase() {
        var m = confirm("Want to clear");
        if (m) {
            ctx.clearRect(0, 0, w, h);
            document.getElementById("canvasimg").style.display = "none";
        }
    }

    function save() {
        document.getElementById("canvasimg").style.border = "2px solid";
        var dataURL = canvas.toDataURL();
        document.getElementById("canvasimg").src = dataURL;
        document.getElementById("canvasimg").style.display = "inline";
    }

    function findxy(res, e) {
        if (res == 'down') {
            prevX = currX;
            prevY = currY;
            currX = e.clientX - canvas.offsetLeft;
            currY = e.clientY - canvas.offsetTop;

            flag = true;
            dot_flag = true;
            if (dot_flag) {
                ctx.beginPath();
                ctx.fillStyle = x;
                ctx.fillRect(currX, currY, 2, 2);
                ctx.closePath();
                dot_flag = false;
            }
        }
        if (res == 'up' || res == "out") {
            flag = false;
        }
        if (res == 'move') {
            if (flag) {
                prevX = currX;
                prevY = currY;
                currX = e.clientX - canvas.offsetLeft;
                currY = e.clientY - canvas.offsetTop;
                draw();
            }
        }
    }
</script>
    <!-- Use latest PDF.js build from Github -->
<script type="text/javascript" src="https://rawgithub.com/mozilla/pdf.js/gh-pages/build/pdf.js"></script>

<script type="text/javascript">
    //
    // Disable workers to avoid yet another cross-origin issue (workers need the URL of
    // the script to be loaded, and dynamically loading a cross-origin script does
    // not work)
    //
    PDFJS.disableWorker = true;
    //
    // Asynchronous download PDF as an ArrayBuffer
    //
    var pdf = document.getElementById('pdf');
    pdf.onchange = function(ev) {
      if (file = document.getElementById('pdf').files[0]) {
        fileReader = new FileReader();
        fileReader.onload = function(ev) {
          console.log(ev);
          PDFJS.getDocument(fileReader.result).then(function getPdfHelloWorld(pdf) {
            //
            // Fetch the first page
            //
            console.log(pdf)
            pdf.getPage(1).then(function getPageHelloWorld(page) {
              var scale = 1.5;
              var viewport = page.getViewport(scale);
              //
              // Prepare canvas using PDF page dimensions
              //
              var canvas = document.getElementById('the-canvas');
              var context = canvas.getContext('2d');
              canvas.height = viewport.height;
              canvas.width = viewport.width;
              //
              // Render PDF page into canvas context
              //
              var task = page.render({canvasContext: context, viewport: viewport})
              task.promise.then(function(){
                console.log(canvas.toDataURL('image/jpeg'));
              });
            });
          }, function(error){
            console.log(error);
          });
        };
        fileReader.readAsArrayBuffer(file);
      }
    }
</script>
<BODY onload="init()">
    <div class="container col-md-5 col-md-offset-1 panel panel-default">
        <div class="panel-body">
            <canvas id="the-canvas" style="border:1px solid black"></canvas>
            <input id='pdf' type='file' />


            <form id="form1" runat="server">
                <DIV class="m-signature-pad" id="signature-pad">
                    <canvas id="canvas" width="400" height="200" style="border:2px solid;"></canvas>
                    <DIV class="description">Sign above</DIV>

                    <BUTTON class="btn btn-primary" data-action="clear" onclick="erase()">Clear</BUTTON>

                    <button class="btn btn-primary" ID="Button1" Text="Button" OnClick="Button1_Click">Save</button>



                </DIV>

                <asp:HiddenField ID="ImgInformation" runat="server" />

                <SCRIPT src="js/signature_pad.js"></SCRIPT>



                <SCRIPT src="js/app.js"></SCRIPT>
            </form>
        </div>
    </div>
    <div class="container col-md-5 col-md-offset-1 panel panel-default">
        <div class="panel-body">
            <form asp-controller="Home" asp-action="FinalizeWaiver" id="progressForm">
                <div id="scrollview" style="overflow:scroll;height:400px">
                    @{ foreach (User user in Model)
                        {
                            <div>
                                @user.firstName  @user.lastName
                                <input type="text" name="firstNameField" value="@user.firstName" hidden />
                                <input type="text" name="lastNameField" value="@user.lastName" hidden />
                                <input type="text" name="phoneField" value="@user.phoneNumber" hidden />
                                <input type="text" name="addressField" value="@user.email" hidden />
                                <input type="text" name="cardSwipeField" value="@user.studentID" hidden />

                            </div>
                        }
                    }</div>
                <button type="button" class="btn btn-primary" onclick="nextButton()">Next</button>
            </form>
        </div>
    </div>


</BODY>
<script>
    var iter = 0;
    function nextButton() {
        var signed = true;
        //this needs to be a proper check of the waiver
        if (signed) {
            iter = iter + 1;
            var count = @Model.Count();
            if(iter>= count){
                this.document.getElementById("progressForm").submit();
            
            }

        }

    }

</script>
